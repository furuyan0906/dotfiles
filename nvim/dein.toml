# call dein#recache_runtimepath() when removing a plugin


# ----- Plugin Manager ----------
[[plugins]]
repo = 'Shougo/dein.vim'

# ----- Asynchronous ----------
[[plugins]]
repo = 'Shougo/vimproc.vim'

# ----- Auto completion ----------
[[plugins]]
repo = 'Shougo/ddc.vim'

[[plugins]]
repo = 'Shougo/pum.vim'

# ----- Dynamic filetype judgement ----------
[[plugins]]
repo = 'Shougo/context_filetype.vim'

# ------------------------------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']
depends = ['deoplete.nvim']

# ----- Lua libraries for plugins ----------------------------------------------------------------------------------------
[[plugins]]
repo = 'nvim-lua/popup.nvim'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'ManifTanjim/nui.nvim'

# ----- Icon -------------------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'

# ----- Color scheme -----------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'kamykn/dark-theme.vim'

# ------------------------------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    let NERDTreeShowHidden = 1
    autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
'''

# ------------------------------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = '''
    map <C-e> <plug>NERDTreeTabsToggle<CR>
    let g:nerdtree_tabs_open_on_console_startup=0
    function! s:MoveCursorAtStart()
        call feedkeys("\<C-l>")
    endfunction
    autocmd StdinReadPre * let s:std_in=1
    autocmd VimEnter * if argc() == 0 && !exists('s:std_in') | NERDTree | endif
'''
depends = ['nerdtree']

# ------------------------------------------------------------------------------------------------------------------------
# @note  install Ricty for Powerline before using vim-airline
#
# brew tap sanemat/font
# brew install ricty --with-powerline
# cp -f /usr/local/opt/ricty/share/fonts/Ricty*.ttf ~/Library/Fonts/
# fc-cache -vf
#
[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#buffer_idx_mode = 1
    let g:airline#extensions#tabline#buffer_idx_format = {
    \ '0': '0 ',
    \ '1': '1 ',
    \ '2': '2 ',
    \ '3': '3 ',
    \ '4': '4 ',
    \ '5': '5 ',
    \ '6': '6 ',
    \ '7': '7 ',
    \ '8': '8 ',
    \ '9': '9 '
    \}
    let g:airline_theme='lucius'
    let g:airline_powerline_fonts = 1
'''

# ------------------------------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'vim-airline/vim-airline-themes'

# ------------------------------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'majutsushi/tagbar'

# ------------------------------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
    let g:neoterm_autoinsert = 1
    let g:neoterm_autoscroll = 1
    tnoremap <silent> <ESC> <C-\><C-n><C-w>
    vnoremap <silent> <C-e> V:TREPLSendSelection<cr>'>j$
'''

# ------------------------------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'simeji/winresizer'

# ------------------------------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'vim-scripts/gtags.vim'

